[tox]
envlist =
    py{38,39,310}-test{,-image,-alldeps,-oldestdeps,-devdeps}{,-cov}{,-clocale}
    py{38,39,310}-test-numpy{118,119,120,121,122,123}
    linkcheck
    codestyle
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
isolated_build = true
indexserver =
    NIGHTLY = https://pypi.anaconda.org/scipy-wheels-nightly/simple

[testenv]
# Suppress display of matplotlib plots generated during docs build
setenv =
    clocale: LC_ALL = C
    image: MPLBACKEND = agg

# Pass through the following environment variables which may be needed for the CI
passenv = HOME WINDIR LC_ALL LC_CTYPE CC CI IS_CRON ARCH_ON_CI

# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp/{envname}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage
    image: with image tests
    numpy118: with numpy 1.18.*
    numpy119: with numpy 1.19.*
    numpy120: with numpy 1.20.*
    numpy121: with numpy 1.21.*
    numpy122: with numpy 1.22.*
    numpy123: with numpy 1.23.*

# The following provides some specific pinnings for key packages
deps =
    numpy118: numpy==1.18.*
    numpy119: numpy==1.19.*
    numpy120: numpy==1.20.*
    numpy121: numpy==1.21.*
    numpy122: numpy==1.22.*
    numpy122: numpy==1.23.*

    # The oldestdeps factor is intended to be used to install the oldest
    # versions of all dependencies that have a minimum version.
    oldestdeps: numpy==1.18.*

    devdeps: :NIGHTLY:numpy
    devdeps: git+https://github.com/scipy/scipy.git#egg=scipy

# The following indicates which extras_require from pyproject.toml will be installed
extras =
    test: test
    alldeps: all
    alldeps: test_all

commands =
    pip freeze
    !cov-!double: pytest --pyargs {toxinidir}/tests array_apis {posargs}
    cov-!double: pytest --pyargs {toxinidir}/tests array_apis --cov array_api --cov-config={toxinidir}/pyproject.toml {posargs}
    cov: coverage xml -o {toxinidir}/coverage.xml

[testenv:codestyle]
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run {posargs:--color always --all-files --show-diff-on-failure}


[flake8]
max-line-length = 120
ignore = A001, A002, A003, D100, D101, D102, D105, D200, D205, D400, D401, E203, W503, W504
doctests = True
docstring-convention = numpy
per-file-ignores =
    tests/*:D1
    setup.py:D1,T201
    src/array_api/namespace.py:D102

[pytest]
testpaths =
    tests
    src/array_api
astropy_header = True
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst
markers =
    incompatible_with_mypyc: run when testing mypyc compiled black
filterwarnings =
    # tomlkit
    ignore:The config value
    # distutils
    ignore:distutils Version classes are deprecated\.
doctest_subpackage_requires =
    array_api/overload.py = python>=3.10
