"""Array API dispatching implementation."""

# LOCAL
from . import linalg
from .constants import e, inf, nan, newaxis, pi
from .creation_functions import (
    empty_like,
    full_like,
    meshgrid,
    ones_like,
    tril,
    triu,
    zeros_like,
)
from .data_type_functions import astype, broadcast_arrays, broadcast_to
from .elementwise_functions import (
    abs,
    acos,
    acosh,
    add,
    asin,
    asinh,
    atan,
    atan2,
    atanh,
    bitwise_and,
    bitwise_invert,
    bitwise_left_shift,
    bitwise_or,
    bitwise_right_shift,
    bitwise_xor,
    ceil,
    cos,
    cosh,
    divide,
    equal,
    exp,
    expm1,
    floor,
    floor_divide,
    greater,
    greater_equal,
    isfinite,
    isinf,
    isnan,
    less,
    less_equal,
    log,
    log1p,
    log2,
    log10,
    logaddexp,
    logical_and,
    logical_not,
    logical_or,
    logical_xor,
    multiply,
    negative,
    not_equal,
    positive,
    pow,
    remainder,
    round,
    sign,
    sin,
    sinh,
    sqrt,
    square,
    subtract,
    tan,
    tanh,
    trunc,
)
from array_api.linear_algebra_functions import (
    matmul,
    matrix_transpose,
    tensordot,
    vecdot,
)
from array_api.manipulation_functions import (
    concat,
    expand_dims,
    flip,
    permute_dims,
    reshape,
    roll,
    squeeze,
    stack,
)
from array_api.searching_functions import argmax, argmin, nonzero
from array_api.set_functions import (
    unique_all,
    unique_counts,
    unique_inverse,
    unique_values,
)
from array_api.sorting_functions import argsort, sort
from array_api.statistical_functions import max, mean, min, prod, std, sum, var
from array_api.utility_functions import all, any

__all__ = [
    "linalg",
    # constants
    "e",
    "inf",
    "nan",
    "newaxis",
    "pi",
    "empty_like",
    "full_like",
    "meshgrid",
    "ones_like",
    "tril",
    "triu",
    "zeros_like",
    # data type functions
    "astype",
    "broadcast_arrays",
    "broadcast_to",
    "abs",
    "acos",
    "acosh",
    "add",
    "asin",
    "asinh",
    "atan",
    "atan2",
    "atanh",
    "bitwise_and",
    "bitwise_left_shift",
    "bitwise_invert",
    "bitwise_or",
    "bitwise_right_shift",
    "bitwise_xor",
    "ceil",
    "cos",
    "cosh",
    "divide",
    "equal",
    "exp",
    "expm1",
    "floor",
    "floor_divide",
    "greater",
    "greater_equal",
    "isfinite",
    "isinf",
    "isnan",
    "less",
    "less_equal",
    "log",
    "log1p",
    "log2",
    "log10",
    "logaddexp",
    "logical_and",
    "logical_not",
    "logical_or",
    "logical_xor",
    "multiply",
    "negative",
    "not_equal",
    "positive",
    "pow",
    "remainder",
    "round",
    "sign",
    "sin",
    "sinh",
    "square",
    "sqrt",
    "subtract",
    "tan",
    "tanh",
    "trunc",
    # linear algebra functions
    "matmul",
    "matrix_transpose",
    "tensordot",
    "vecdot",
    # manipulation functions
    "concat",
    "expand_dims",
    "flip",
    "permute_dims",
    "reshape",
    "roll",
    "squeeze",
    "stack",
    # searching functions
    "argmax",
    "argmin",
    "nonzero",
    # set functions
    "unique_all",
    "unique_counts",
    "unique_inverse",
    "unique_values",
    # sorting functions
    "sort",
    "argsort",
    # statistics functions
    "max",
    "mean",
    "min",
    "prod",
    "std",
    "sum",
    "var",
    # utility functions
    "all",
    "any",
]
